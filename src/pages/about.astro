---
import Header from '../components/Header.astro';
import Layout from '../layouts/Layout.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';
const pageTitle = "私について";
const identity = {
  country: "日本",
  occupation: "技術ライター",
  hobbies: ["フィギュアスケート", "スプレッドイーグル"],
};
const skills = ["HTML,CSS,JS", "React", "Vue.JS", "python", "PHP", "Astro", "ドキュメントの執筆"];

const happy = true;
const finished = false;
const goal = 3;
const skillColor = "red"
const fontWeight = "bold"
---
<Layout title="Welcome to Astro.">
	<html lang="ja">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<title>Astro</title>
	</head>
		<Header />
		<body>
			<h1>私のAstroサイト</h1>
			<h1>{pageTitle}</h1>
			<h2>... そして私の新しいAstroサイトについて！</h2>
			
			<p>私はAstroの入門チュートリアルを進めています。これは私のウェブサイトの2番目のページで、自分で作った初めてのページです！</p>
			
			<p>このサイトはチュートリアルを進めるにつれて更新されていきます。定期的にチェックして、私の旅の様子を見に来てください！</p>

			<p>以下は私に関するいくつかの事実です。</p>
			<ul>
			<li>{identity.country}に住んでおり、{identity.occupation}として働いています。</li>
			{identity.hobbies.length >= 2 &&
				<li>私の趣味は{identity.hobbies[0]}で好きな技は{identity.hobbies[1]}です。</li>
			}
			</ul>
			<p>私のスキルは以下の通りです。</p>
			<ul>
				{skills.map((skill) => <li class="skill">{skill}</li>)}
			</ul>
			{happy && <p>I am happy to be learning Astro! Astroを学べて幸せです！</p>}
			{finished && <p>I finished this tutorial! このチュートリアルを終えました！</p>}
			{goal === 3 ? <p>My goal is to finish in 3 days. 3日で終えるのが目標です。</p> : <p>My goal is not 3 days. 3日が目標ではありません。</p>}
		</body>
		<Footer />
		<script>import "../scripts/menu.js";</script>
	</html>
</Layout>

<style>
	body {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		color: purple;
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
<style define:vars={{skillColor, fontWeight}}>
	.skill {
	  color: var(--skillColor);
	  font-weight: var(--fontWeight);
	}
 </style>